{:paths ["src"
         "resources" ; extension , resources used in devtools ui
         ]
 :deps {org.clojure/clojure    {:mvn/version "1.11.1"}
        ; logging
        com.taoensso/timbre {:mvn/version "6.2.2"} ; clj/cljs logging
        aero/aero {:mvn/version "1.1.6"}
        juxt/clip {:mvn/version "0.27.0"}
        org.clojure/tools.cli {:mvn/version "1.0.206"}
        ; ids 
        com.lucasbradstreet/cljs-uuid-utils {:mvn/version "1.0.2"} ; uuid - clojurescript
        ; configuration
        cprop/cprop {:mvn/version "0.1.19"} ; config management https://github.com/tolitius/cprop
        ; differ
        lambdaisland/deep-diff2 {:mvn/version "2.0.108"} ; differ
        ; files and resources
        babashka/fs {:mvn/version "0.1.1"}
        resauce/resauce {:mvn/version  "0.2.0"} ; jar resources
        hawk/hawk {:mvn/version "0.2.11"} ; file watcher  ;:exclusions [[net.java.dev.jna/jna]] ; this breaks tech.ml.dataset and libpythonclj
        ; encoding edn/transit/json
        com.cognitect/transit-clj {:mvn/version  "0.8.319"} ; transit
        com.cognitect/transit-cljs {:mvn/version  "0.8.256"} ; transit
        fipp/fipp {:mvn/version "0.6.25"} ; edn pretty printing
        cheshire/cheshire {:mvn/version "5.10.2"}  ; JSON parsings and pretty printing
        ; time encoding
        tick/tick {:mvn/version "0.5.0-RC5"} ; replacement for clj-time
        clojure.java-time/clojure.java-time {:mvn/version "0.3.3"}
        com.andrewmcveigh/cljs-time {:mvn/version  "0.5.2"}
        time-literals/time-literals {:mvn/version "0.1.5"}
        ; image encoding
        org.clojure/data.codec {:mvn/version "0.1.1"} ; image base64 encoding
        ; taggedreader encoding
        io.replikativ/incognito {:mvn/version "0.2.7"  ; serialize any object
                                 :exclusions [com.cognitect/fress]} ; fress makes problems
        bidi/bidi {:mvn/version "2.1.6"}}

 :aliases
 {;https://github.com/applied-science/deps-library
  :release
  {:extra-deps {applied-science/deps-library {:mvn/version "0.4.0"}}
   :main-opts ["-m" "applied-science.deps-library"]}

  ; https://github.com/weavejester/cljfmt
  :cljfmt
  {:extra-deps {cljfmt/cljfmt {:mvn/version "0.8.0"}}
   :main-opts ["-m" "cljfmt.main" "check" "--indents" "cljfmt.edn"]}
  :cljfmt-fix
  {:extra-deps {cljfmt/cljfmt {:mvn/version "0.8.0"}}
   :main-opts ["-m" "cljfmt.main" "fix" "--indents" "cljfmt.edn"]}

 ; https://github.com/clj-kondo/clj-kondo/blob/master/doc/jvm.md
  :lint
  {:extra-deps {clj-kondo/clj-kondo {:mvn/version "RELEASE"}}
   :main-opts ["-m" "clj-kondo.main"
               "--lint"
               "src" "test"
               "--config" "cljkondo.edn"]}

  :outdated
  {:extra-deps {com.github.liquidz/antq {:mvn/version "RELEASE"}}
   :main-opts ["-m" "antq.core"]}

  :check
  {:extra-deps {athos/clj-check {:git/url "https://github.com/athos/clj-check.git"
                                 :sha "518d5a1cbfcd7c952f548e6dbfcb9a4a5faf9062"}}
   :main-opts ["-m" "clj-check.check"]}

  :garamond
  {:main-opts ["-m" "garamond.main"]
   :extra-deps {com.workframe/garamond {:mvn/version "0.4.0"}}}

  :test
  {:extra-paths ["test/src"
                 "test/resources"]
   :extra-deps {io.github.cognitect-labs/test-runner
                {:git/url "https://github.com/cognitect-labs/test-runner.git"
                 :sha "cc75980b43011773162b485f46f939dc5fba91e4"}}
   :main-opts ["-m" "cognitect.test-runner"]
   :exec-fn cognitect.test-runner.api/test}

  :nrepl {:extra-paths ["test/resources"]
          :extra-deps {nrepl/nrepl {:mvn/version "0.9.0"}}
          :main-opts  ["-m" "nrepl.cmdline"]}

  :npm-install {:extra-paths ["test"]
                :extra-deps {;org.slf4j/slf4j-nop {:mvn/version "1.7.32"}
                             org.pinkgorilla/webly {:mvn/version "0.4.594"
                                                    :exclusions  [org.pinkgorilla/modular]}}
                :exec-fn webly.app.app/webly-run
                :exec-args {:config nil
                            :profile "npm-install"}}

  :build-cljs-test {:extra-paths ["test"]
                    :extra-deps {;org.slf4j/slf4j-nop {:mvn/version "1.7.32"}
                                 org.pinkgorilla/webly {:mvn/version "0.4.594"
                                                        :exclusions  [org.pinkgorilla/modular]}}
                    :exec-fn webly.app.app/webly-run
                    :exec-args {:config nil
                                :profile "ci"}}


  :demo-log-default
  {:extra-paths ["demo"]
   :exec-args {:custom-config false}
   :exec-fn logging/demo}

  :demo-log-custom
  {:extra-paths ["demo"]
   :exec-args {:custom-config true}
   :exec-fn logging/demo}

  ;; SYSTEM RUNNER DEMOS

  :demo-config
  {:extra-paths ["demo" "test/resources" "test/src"]
   :exec-args {:custom-config true}
   :exec-fn config/demo}

  :demo-system ; run a system with deps.edn:  clj -X:demo-system :run '[1 2 3]'
  {:extra-deps {nrepl/nrepl {:mvn/version "0.9.0"}}
   :extra-paths ["demo" "test/resources" "test/src"]
   :exec-fn modular.system/start!
   :exec-args {:services "services.edn"
               :config ["webly/config.edn" "runner.edn"]}}

  :system {:extra-deps {nrepl/nrepl {:mvn/version "0.9.0"}}
           :extra-paths ["demo" "test/resources" "test/src"]
           :main-opts  ["-m" "modular.system" 
                        "--services" "services.edn"
                        "--config" "[\"webly/config.edn\" \"runner.edn\"]"
                        ]}
 

  

   ; tree and list are here just because tools.deps.alpha does not work on my machine
  :tree {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.14.1178"}}
         :exec-fn clojure.tools.cli.api/tree}
  :list {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.14.1178"}}
         :exec-fn clojure.tools.cli.api/list}


;
  }}
