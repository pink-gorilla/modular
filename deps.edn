{:paths ["src"
         "resources" ; extension , resources used in devtools ui
         ]
 :deps {org.clojure/clojure    {:mvn/version "1.11.1"}
        ; logging
        com.taoensso/timbre {:mvn/version "6.2.2"} ; clj/cljs logging
        aero/aero {:mvn/version "1.1.6"}
        juxt/clip {:mvn/version "0.27.0"}
        org.clojure/tools.cli {:mvn/version "1.0.206"}
        ; ids
        com.lucasbradstreet/cljs-uuid-utils {:mvn/version "1.0.2"} ; uuid - clojurescript
        ; configuration
        cprop/cprop {:mvn/version "0.1.19"} ; config management https://github.com/tolitius/cprop
        ; differ
        lambdaisland/deep-diff2 {:mvn/version "2.0.108"} ; differ
        ; files and resources
        babashka/fs {:mvn/version "0.5.21"}
        resauce/resauce {:mvn/version  "0.2.0"} ; jar resources
        hawk/hawk {:mvn/version "0.2.11"} ; file watcher  ;:exclusions [[net.java.dev.jna/jna]] ; this breaks tech.ml.dataset and libpythonclj
        ; encoding edn/transit/json
        com.cognitect/transit-clj {:mvn/version  "1.0.333"} ; transit
        com.cognitect/transit-cljs {:mvn/version  "0.8.280"} ; transit
        fipp/fipp {:mvn/version "0.6.25"} ; edn pretty printing
        cheshire/cheshire {:mvn/version "5.10.2"}  ; JSON parsings and pretty printing
        ; time encoding
        tick/tick {:mvn/version "0.6.2"} ; replacement for clj-time
        ; 20240917 removed dep to clojure.java-time. we only use tick really
        ;clojure.java-time/clojure.java-time {:mvn/version "0.3.3"} this caused clojure errors.
        com.andrewmcveigh/cljs-time {:mvn/version  "0.5.2"}
        com.widdindustries/time-literals {:mvn/version "0.1.10"} ; also used by tick
        ; image encoding
        org.clojure/data.codec {:mvn/version "0.1.1"} ; image base64 encoding
        ; taggedreader encoding
        io.replikativ/incognito {:mvn/version "0.3.66"  ; serialize any object
                                 :exclusions [com.cognitect/fress]} ; fress makes problems
        bidi/bidi {:mvn/version "2.1.6"}
        }

 :aliases
 {; github ci  
  :build {:deps {io.github.clojure/tools.build {:mvn/version "0.9.6"}
                 slipset/deps-deploy {:mvn/version "0.2.1"}}
          :ns-default build}

  ; https://github.com/weavejester/cljfmt
  :cljfmt
  {:extra-deps {cljfmt/cljfmt {:mvn/version "0.8.0"}}
   :main-opts ["-m" "cljfmt.main" "check" "--indents" "cljfmt.edn"]}
  :cljfmt-fix
  {:extra-deps {cljfmt/cljfmt {:mvn/version "0.8.0"}}
   :main-opts ["-m" "cljfmt.main" "fix" "--indents" "cljfmt.edn"]}

 ; https://github.com/clj-kondo/clj-kondo/blob/master/doc/jvm.md
  :lint
  {:extra-deps {clj-kondo/clj-kondo {:mvn/version "2024.08.29"}}
   :main-opts ["-m" "clj-kondo.main"
               "--lint"
               "src" "test"
               "--config" "cljkondo.edn"]}

  :check
  {:extra-deps {athos/clj-check {:git/url "https://github.com/athos/clj-check.git"
                                 :sha "518d5a1cbfcd7c952f548e6dbfcb9a4a5faf9062"}}
   :main-opts ["-m" "clj-check.check"]}

  :test
  {:extra-paths ["test"
                 "test/resources"]
   :extra-deps {io.github.cognitect-labs/test-runner
                {:git/url "https://github.com/cognitect-labs/test-runner.git"
                 :sha "cc75980b43011773162b485f46f939dc5fba91e4"}}
   :main-opts ["-m" "cognitect.test-runner"]
   :exec-fn cognitect.test-runner.api/test}

  :webly {:extra-paths ["test"]
          :extra-deps {;org.slf4j/slf4j-nop {:mvn/version "1.7.32"}
                       org.pinkgorilla/webly {:mvn/version "0.4.623"
                                              :exclusions  [org.pinkgorilla/modular]}}
          :exec-fn webly.app.app/webly-build
          :exec-args {:config "webly/config.edn"
                      :profile "npm-install"}}

  :npm-install {:exec-args {:profile "npm-install"}}
  :build-ci {:exec-args {:profile "ci"}}
  
;  :build-cljs-test 


  :demo-log-default
  {:extra-paths ["demo"]
   :exec-args {:custom-config false}
   :exec-fn logging/demo}

  :demo-log-custom
  {:extra-paths ["demo"]
   :exec-args {:custom-config true}
   :exec-fn logging/demo}

  ;; SYSTEM RUNNER DEMOS

  :demo-config
  {:extra-paths ["demo" "test/resources" "test/src"]
   :exec-args {:custom-config true}
   :exec-fn config/demo}

  :demo-system ; run a system with deps.edn:  clj -X:demo-system :run '[1 2 3]'
  {:extra-deps {nrepl/nrepl {:mvn/version "0.9.0"}}
   :extra-paths ["src-demo" "test/resources" "test/src"]
   :exec-fn modular.system/start!
   :exec-args {:services "services.edn"
               :config ["webly/config.edn" {:ns-clj [demo.super]}]}}

  :run {:exec-args {:run demo.run/run27}}

  :demo-system-main
  {:extra-deps {nrepl/nrepl {:mvn/version "0.9.0"}}
   :extra-paths ["src-demo" "test/resources" "test/src"]
   :main-opts  ["-m" "modular.system"
                "--services" "services.edn"
                "--config" "[\"webly/config.edn\" ]"
                        ]}

   ; tree and list are here just because tools.deps.alpha does not work on my machine
  ;:tree {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.14.1178"}}
  ;       :exec-fn clojure.tools.cli.api/tree}
  ;:list {:extra-deps {org.clojure/tools.deps.alpha {:mvn/version "0.14.1178"}}
  ;       :exec-fn clojure.tools.cli.api/list}

  
 :nrepl
{:extra-deps {nrepl/nrepl {:mvn/version "0.8.3"}
              cider/cider-nrepl {:mvn/version,"0.27.2"}
              cider/piggieback {:mvn/version "0.4.2"}}
 :main-opts ["-m" "nrepl.cmdline"
             "-b" "0.0.0.0"
             "-p" "9100"
                        ;"--middleware" "[cider.nrepl/cider-middleware,refactor-nrepl.middleware/wrap-refactor]"
             ]}

;
  }}
